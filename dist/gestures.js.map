{"version":3,"sources":["ts/GesturesEvent.ts","ts/Gestures.ts","ts/index.ts","../node_modules/@mpc/mpc/src/mpc.ts","gestures.ts"],"names":[],"mappings":"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","file":"gestures.js","sourceRoot":"..\\src","sourcesContent":["export class GesturesEvent extends UIEvent {\r\n  constructor(type: \"mpc-down\" | \"mpc-move\" | \"mpc-swipe\" | \"mpc-zoom\" | \"mpc-up\", eventInitDict?: GesturesEventInit);\r\n  constructor(type: string, eventInitDict?: GesturesEventInit);\r\n  constructor(type: string, eventInitDict?: GesturesEventInit) {\r\n    super(type, eventInitDict);\r\n    this.#movementX = eventInitDict.movementX || 0;\r\n    this.#movementY = eventInitDict.movementY || 0;\r\n    this.#clientX = eventInitDict.clientX || 0;\r\n    this.#clientY = eventInitDict.clientY || 0;\r\n    this.#pageX = eventInitDict.pageX || 0;\r\n    this.#pageY = eventInitDict.pageY || 0;\r\n    this.#screenX = eventInitDict.screenX || 0;\r\n    this.#screenY = eventInitDict.screenY || 0;\r\n    this.#info = eventInitDict.info || null;\r\n  }\r\n  #movementX: number;\r\n  get movementX() { return this.#movementX; }\r\n  #movementY: number;\r\n  get movementY() { return this.#movementY; }\r\n  #clientX: number;\r\n  get clientX() { return this.#clientX; }\r\n  #clientY: number;\r\n  get clientY() { return this.#clientY; }\r\n\r\n  get offsetX() { return (<HTMLElement>this.target).getBoundingClientRect().x - this.#clientX; }\r\n  get offsetY() { return (<HTMLElement>this.target).getBoundingClientRect().y - this.#clientY; }\r\n\r\n  #pageX: number;\r\n  get pageX() { return this.#pageX; }\r\n  #pageY: number;\r\n  get pageY() { return this.#pageY; }\r\n  #screenX: number;\r\n  get screenX() { return this.#screenX; }\r\n  #screenY: number;\r\n  get screenY() { return this.#screenY; }\r\n\r\n  #info: {\r\n    type: \"touch\";\r\n    movements: TouchMovement[];\r\n  } | {\r\n    type: \"mouse\" | \"pointer\";\r\n    movement: MouseMovement;\r\n  } | {\r\n    type: \"wheel\";\r\n    ctrl: boolean;\r\n    deltaX: number;\r\n    deltaY: number;\r\n    deltaZ: number;\r\n  };\r\n  get info() { return this.#info; }\r\n}\r\nObject.defineProperty(GesturesEvent.prototype, Symbol.toStringTag, {\r\n  value: \"MPCGesturesEvent\",\r\n});\r\nexport default GesturesEvent;\r\n\r\nexport interface GesturesEventInit extends UIEventInit {\r\n  movementX?: number;\r\n  movementY?: number;\r\n  clientX?: number;\r\n  clientY?: number;\r\n  pageX?: number;\r\n  pageY?: number;\r\n  screenX?: number;\r\n  screenY?: number;\r\n  info?: {\r\n    type: \"touch\";\r\n    movements: TouchMovement[];\r\n  } | {\r\n    type: \"mouse\" | \"pointer\";\r\n    movement: MouseMovement;\r\n  } | {\r\n    type: \"wheel\";\r\n    ctrl: boolean;\r\n    deltaX: number;\r\n    deltaY: number;\r\n    deltaZ: number;\r\n  };\r\n}\r\n\r\nexport interface Move {\r\n  screenX: number;\r\n  screenY: number;\r\n  pageX: number;\r\n  pageY: number;\r\n  clientX: number;\r\n  clientY: number;\r\n  target: EventTarget;\r\n  timeStamp: number;\r\n}\r\nexport interface TouchMove extends Move {\r\n  identifier: number;\r\n}\r\nexport interface MouseMove extends Move {\r\n  ctrl: boolean;\r\n  buttons: number;\r\n}\r\n// export interface PointerMove extends MouseMove {\r\n//   pointerType: string;\r\n//   identifer: number;\r\n// }\r\nexport interface Movement {\r\n  from: Move;\r\n  to: Move;\r\n}\r\nexport interface TouchMovement extends Movement {\r\n  identifier: number;\r\n}\r\nexport interface MouseMovement extends Movement {\r\n  ctrl: boolean;\r\n  buttons: number;\r\n}\r\n","import GesturesEvent, { GesturesEventInit, TouchMove, MouseMove } from \"./GesturesEvent\";\r\n\r\ntype INPUT_MODE = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\r\n// type INPUT_MODE = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15;\r\ntype INPUT_MOUSE = 1;\r\ntype INPUT_TOUCH = 2;\r\ntype INPUT_WHEEL = 4;\r\n// type INPUT_POINTER = 8;\r\n\r\nexport class Gestures {\r\n  constructor() {\r\n    this.activate();\r\n  }\r\n\r\n  static readonly INPUT_MOUSE: INPUT_MODE = 1;\r\n  static readonly INPUT_TOUCH: INPUT_MODE = 2;\r\n  static readonly INPUT_WHEEL: INPUT_MODE = 4;\r\n  // static readonly INPUT_POINTER: INPUT_MODE = 8;\r\n\r\n  readonly INPUT_MOUSE: INPUT_MODE = 1;\r\n  readonly INPUT_TOUCH: INPUT_MODE = 2;\r\n  readonly INPUT_WHEEL: INPUT_MODE = 4;\r\n  // readonly INPUT_POINTER: INPUT_MODE = 8;\r\n\r\n  #touches: TouchMove[] = [];\r\n  get touches() { return this.#touches; }\r\n  #touchesLength: number = 0;\r\n  get touchesLength() { return this.#touchesLength; }\r\n  #mouse: MouseMove = null;\r\n  get mouse() { return this.#mouse; }\r\n  // #pointer: PointerMove = null;\r\n  // get pointer() { return this.#pointer; }\r\n  #minMovementForSwipes: number = 50;\r\n  get minMovementForSwipes() { return this.#minMovementForSwipes; }\r\n  set minMovementForSwipes(value: number) { this.#minMovementForSwipes = value > 50 ? value > this.#maxMovementForSwipes ? this.#maxMovementForSwipes - 1 : value : 50; }\r\n  #maxMovementForSwipes: number = 150;\r\n  get maxMovementForSwipes() { return this.#maxMovementForSwipes; }\r\n  set maxMovementForSwipes(value: number) { this.#maxMovementForSwipes = value > this.#minMovementForSwipes ? value : this.#minMovementForSwipes + 1; }\r\n  #maxDurationForSwipes: number = 1000;\r\n  get maxDurationForSwipes() { return this.#maxDurationForSwipes; }\r\n  set maxDurationForSwipes(value: number) { this.#maxDurationForSwipes = value > 50 ? value : 50; }\r\n\r\n  #down = (event: Event) => {\r\n    if (event instanceof TouchEvent) {\r\n      var touch0: Touch = event.touches[event.touches.length - 1];\r\n      this.#touches.push({\r\n        pageX: touch0.pageX,\r\n        pageY: touch0.pageY,\r\n        screenX: touch0.screenX,\r\n        screenY: touch0.screenY,\r\n        clientX: touch0.clientX,\r\n        clientY: touch0.clientY,\r\n        target: touch0.target,\r\n        identifier: touch0.identifier,\r\n        timeStamp: event.timeStamp,\r\n      });\r\n      if (this.#touches.length > this.#touchesLength) {\r\n        this.#touchesLength = this.#touches.length;\r\n      }\r\n      if (!this.trigger(event.target, \"mpc-down\", {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        view: event.view,\r\n        movementX: 0,\r\n        movementY: 0,\r\n        clientX: touch0.clientX,\r\n        clientY: touch0.clientY,\r\n        pageX: touch0.pageX,\r\n        pageY: touch0.pageY,\r\n        screenX: touch0.screenX,\r\n        screenY: touch0.screenY,\r\n        info: {\r\n          type: \"touch\",\r\n          movements: [{\r\n            identifier: touch0.identifier,\r\n            from: {\r\n              clientX: touch0.clientX,\r\n              clientY: touch0.clientY,\r\n              pageX: touch0.pageX,\r\n              pageY: touch0.pageY,\r\n              screenX: touch0.screenX,\r\n              screenY: touch0.screenY,\r\n              target: touch0.target,\r\n              timeStamp: event.timeStamp,\r\n            },\r\n            to: {\r\n              clientX: touch0.clientX,\r\n              clientY: touch0.clientY,\r\n              pageX: touch0.pageX,\r\n              pageY: touch0.pageY,\r\n              screenX: touch0.screenX,\r\n              screenY: touch0.screenY,\r\n              target: touch0.target,\r\n              timeStamp: event.timeStamp,\r\n            },\r\n          }],\r\n        },\r\n      })) {\r\n        event.preventDefault();\r\n      }\r\n      // } else if (event instanceof PointerEvent) {\r\n      //   console.log(\"down\", event);\r\n    } else if (event instanceof MouseEvent) {\r\n      this.#mouse = {\r\n        pageX: event.pageX,\r\n        pageY: event.pageY,\r\n        screenX: event.screenX,\r\n        screenY: event.screenY,\r\n        clientX: event.clientX,\r\n        clientY: event.clientY,\r\n        ctrl: event.ctrlKey,\r\n        buttons: event.buttons,\r\n        target: event.target,\r\n        timeStamp: event.timeStamp,\r\n      };\r\n      if (!this.trigger(event.target, \"mpc-down\", {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        view: event.view,\r\n        movementX: 0,\r\n        movementY: 0,\r\n        clientX: event.clientX,\r\n        clientY: event.clientY,\r\n        pageX: event.pageX,\r\n        pageY: event.pageY,\r\n        screenX: event.screenX,\r\n        screenY: event.screenY,\r\n        info: {\r\n          type: \"mouse\",\r\n          movement: {\r\n            ctrl: this.#mouse.ctrl,\r\n            buttons: this.#mouse.buttons,\r\n            from: {\r\n              clientX: this.#mouse.clientX,\r\n              clientY: this.#mouse.clientY,\r\n              pageX: this.#mouse.pageX,\r\n              pageY: this.#mouse.pageY,\r\n              screenX: this.#mouse.screenX,\r\n              screenY: this.#mouse.screenY,\r\n              target: this.#mouse.target,\r\n              timeStamp: this.#mouse.timeStamp,\r\n            },\r\n            to: {\r\n              clientX: this.#mouse.clientX,\r\n              clientY: this.#mouse.clientY,\r\n              pageX: this.#mouse.pageX,\r\n              pageY: this.#mouse.pageY,\r\n              screenX: this.#mouse.screenX,\r\n              screenY: this.#mouse.screenY,\r\n              target: this.#mouse.target,\r\n              timeStamp: this.#mouse.timeStamp,\r\n            },\r\n          },\r\n        },\r\n      })) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  #move = (event: Event) => {\r\n    if (event instanceof TouchEvent) {\r\n      if (this.#touches.length == 1) {\r\n        let touch0_start = this.#touches[0];\r\n        let touch0_end = event.touches[0];\r\n        let movementX = touch0_end.screenX - touch0_start.screenX;\r\n        let movementY = touch0_end.screenY - touch0_start.screenY;\r\n        if (movementX != 0 || movementY != 0) {\r\n          if (!this.trigger(event.target, \"mpc-move\", {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            view: event.view,\r\n            movementX: movementX,\r\n            movementY: movementY,\r\n            clientX: touch0_end.clientX,\r\n            clientY: touch0_end.clientY,\r\n            pageX: touch0_end.pageX,\r\n            pageY: touch0_end.pageY,\r\n            screenX: touch0_end.screenX,\r\n            screenY: touch0_end.screenY,\r\n            info: {\r\n              type: \"touch\",\r\n              movements: [{\r\n                identifier: touch0_start.identifier,\r\n                from: {\r\n                  clientX: touch0_start.clientX,\r\n                  clientY: touch0_start.clientY,\r\n                  pageX: touch0_start.pageX,\r\n                  pageY: touch0_start.pageY,\r\n                  screenX: touch0_start.screenX,\r\n                  screenY: touch0_start.screenY,\r\n                  target: touch0_start.target,\r\n                  timeStamp: touch0_start.timeStamp,\r\n                },\r\n                to: {\r\n                  clientX: touch0_end.clientX,\r\n                  clientY: touch0_end.clientY,\r\n                  pageX: touch0_end.pageX,\r\n                  pageY: touch0_end.pageY,\r\n                  screenX: touch0_end.screenX,\r\n                  screenY: touch0_end.screenY,\r\n                  target: touch0_end.target,\r\n                  timeStamp: event.timeStamp,\r\n                },\r\n              }],\r\n            },\r\n          })) {\r\n            event.preventDefault();\r\n          }\r\n        }\r\n      } else if (this.#touches.length == 2) {\r\n        let touch0_start = this.#touches[0];\r\n        let touch1_start = this.#touches[1];\r\n        let touch0_end = event.touches[0];\r\n        let touch1_end = event.touches[1];\r\n        let screenX = (touch0_end.screenX + touch1_end.screenX) / 2;\r\n        let screenY = (touch0_end.screenY + touch1_end.screenY) / 2;\r\n        let movementX = screenX - (touch0_start.screenX + touch1_start.screenX) / 2;\r\n        let movementY = screenY - (touch0_start.screenY + touch1_start.screenY) / 2;\r\n        if (movementX != 0 || movementY != 0) {\r\n          if (!this.trigger(event.target, \"mpc-zoom\", {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            view: event.view,\r\n            movementX: movementX,\r\n            movementY: movementY,\r\n            clientX: (touch0_end.clientX + touch1_end.clientX) / 2,\r\n            clientY: (touch0_end.clientY + touch1_end.clientY) / 2,\r\n            pageX: (touch0_end.pageX + touch1_end.pageX) / 2,\r\n            pageY: (touch0_end.pageY + touch1_end.pageY) / 2,\r\n            screenX: screenX,\r\n            screenY: screenY,\r\n            info: {\r\n              type: \"touch\",\r\n              movements: [{\r\n                identifier: touch0_start.identifier,\r\n                from: {\r\n                  clientX: touch0_start.clientX,\r\n                  clientY: touch0_start.clientY,\r\n                  pageX: touch0_start.pageX,\r\n                  pageY: touch0_start.pageY,\r\n                  screenX: touch0_start.screenX,\r\n                  screenY: touch0_start.screenY,\r\n                  target: touch0_start.target,\r\n                  timeStamp: touch0_start.timeStamp,\r\n                },\r\n                to: {\r\n                  clientX: touch0_end.clientX,\r\n                  clientY: touch0_end.clientY,\r\n                  pageX: touch0_end.pageX,\r\n                  pageY: touch0_end.pageY,\r\n                  screenX: touch0_end.screenX,\r\n                  screenY: touch0_end.screenY,\r\n                  target: touch0_end.target,\r\n                  timeStamp: event.timeStamp,\r\n                },\r\n              }, {\r\n                identifier: touch1_start.identifier,\r\n                from: {\r\n                  clientX: touch1_start.clientX,\r\n                  clientY: touch1_start.clientY,\r\n                  pageX: touch1_start.pageX,\r\n                  pageY: touch1_start.pageY,\r\n                  screenX: touch1_start.screenX,\r\n                  screenY: touch1_start.screenY,\r\n                  target: touch1_start.target,\r\n                  timeStamp: touch1_start.timeStamp,\r\n                },\r\n                to: {\r\n                  clientX: touch1_end.clientX,\r\n                  clientY: touch1_end.clientY,\r\n                  pageX: touch1_end.pageX,\r\n                  pageY: touch1_end.pageY,\r\n                  screenX: touch1_end.screenX,\r\n                  screenY: touch1_end.screenY,\r\n                  target: touch1_end.target,\r\n                  timeStamp: event.timeStamp,\r\n                },\r\n              }],\r\n            },\r\n          })\r\n          ) {\r\n            event.preventDefault();\r\n          }\r\n        }\r\n      }\r\n      // } else if (event instanceof PointerEvent) {\r\n      //   console.log(\"move\", event);\r\n    } else if (event instanceof MouseEvent) {\r\n      if (this.#mouse) {\r\n        let movementX = event.screenX - this.#mouse.screenX;\r\n        let movementY = event.screenY - this.#mouse.screenY;\r\n        if (movementX != 0 || movementY != 0) {\r\n          if (!this.trigger(event.target, this.#mouse.ctrl ? \"mpc-zoom\" : \"mpc-move\", {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            view: event.view,\r\n            movementX: movementX,\r\n            movementY: movementY,\r\n            clientX: event.clientX,\r\n            clientY: event.clientY,\r\n            pageX: event.pageX,\r\n            pageY: event.pageY,\r\n            screenX: event.screenX,\r\n            screenY: event.screenY,\r\n            info: {\r\n              type: \"mouse\",\r\n              movement: {\r\n                ctrl: this.#mouse.ctrl,\r\n                buttons: this.#mouse.buttons,\r\n                from: {\r\n                  clientX: this.#mouse.clientX,\r\n                  clientY: this.#mouse.clientY,\r\n                  pageX: this.#mouse.pageX,\r\n                  pageY: this.#mouse.pageY,\r\n                  screenX: this.#mouse.screenX,\r\n                  screenY: this.#mouse.screenY,\r\n                  target: this.#mouse.target,\r\n                  timeStamp: this.#mouse.timeStamp,\r\n                },\r\n                to: {\r\n                  clientX: event.clientX,\r\n                  clientY: event.clientY,\r\n                  pageX: event.pageX,\r\n                  pageY: event.pageY,\r\n                  screenX: event.screenX,\r\n                  screenY: event.screenY,\r\n                  target: event.target,\r\n                  timeStamp: event.timeStamp,\r\n                },\r\n              },\r\n            },\r\n          })) {\r\n            event.preventDefault();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  #up = (event: Event) => {\r\n    if (event instanceof TouchEvent) {\r\n      if (\r\n        this.#touchesLength == 1 &&\r\n        event.timeStamp - this.#touches[0].timeStamp <= this.#maxDurationForSwipes\r\n      ) {\r\n        let touch0_start = this.#touches[0];\r\n        let touch0_end = event.changedTouches[0];\r\n        let movementX = touch0_end.screenX - touch0_start.screenX;\r\n        let movementY = touch0_end.screenY - touch0_start.screenY;\r\n        let abs_movement = movementX * movementX + movementY * movementY;\r\n        if (\r\n          abs_movement >= this.#minMovementForSwipes * this.#minMovementForSwipes &&\r\n          abs_movement <= this.#maxMovementForSwipes * this.#maxMovementForSwipes\r\n        ) {\r\n          if (!this.trigger(touch0_start.target, \"mpc-swipe\", {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            view: event.view,\r\n            movementX: movementX,\r\n            movementY: movementY,\r\n            clientX: touch0_start.clientX,\r\n            clientY: touch0_start.clientY,\r\n            pageX: touch0_start.pageX,\r\n            pageY: touch0_start.pageY,\r\n            screenX: touch0_start.screenX,\r\n            screenY: touch0_start.screenY,\r\n            info: {\r\n              type: \"touch\",\r\n              movements: [\r\n                {\r\n                  identifier: touch0_start.identifier,\r\n                  from: {\r\n                    clientX: touch0_start.clientX,\r\n                    clientY: touch0_start.clientY,\r\n                    pageX: touch0_start.pageX,\r\n                    pageY: touch0_start.pageY,\r\n                    screenX: touch0_start.screenX,\r\n                    screenY: touch0_start.screenY,\r\n                    target: touch0_start.target,\r\n                    timeStamp: touch0_start.timeStamp\r\n                  },\r\n                  to: {\r\n                    clientX: touch0_end.clientX,\r\n                    clientY: touch0_end.clientY,\r\n                    pageX: touch0_end.pageX,\r\n                    pageY: touch0_end.pageY,\r\n                    screenX: touch0_end.screenX,\r\n                    screenY: touch0_end.screenY,\r\n                    target: touch0_end.target,\r\n                    timeStamp: touch0_start.timeStamp\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          })) {\r\n            event.preventDefault();\r\n          }\r\n        }\r\n        if (!this.trigger(event.target, \"mpc-up\", {\r\n          bubbles: true,\r\n          cancelable: true,\r\n          view: event.view,\r\n          movementX: movementX,\r\n          movementY: movementY,\r\n          clientX: touch0_end.clientX,\r\n          clientY: touch0_end.clientY,\r\n          pageX: touch0_end.pageX,\r\n          pageY: touch0_end.pageY,\r\n          screenX: touch0_end.screenX,\r\n          screenY: touch0_end.screenY,\r\n          info: {\r\n            type: \"touch\",\r\n            movements: [\r\n              {\r\n                identifier: touch0_start.identifier,\r\n                from: {\r\n                  clientX: touch0_start.clientX,\r\n                  clientY: touch0_start.clientY,\r\n                  pageX: touch0_start.pageX,\r\n                  pageY: touch0_start.pageY,\r\n                  screenX: touch0_start.screenX,\r\n                  screenY: touch0_start.screenY,\r\n                  target: touch0_start.target,\r\n                  timeStamp: touch0_start.timeStamp,\r\n                },\r\n                to: {\r\n                  clientX: touch0_end.clientX,\r\n                  clientY: touch0_end.clientY,\r\n                  pageX: touch0_end.pageX,\r\n                  pageY: touch0_end.pageY,\r\n                  screenX: touch0_end.screenX,\r\n                  screenY: touch0_end.screenY,\r\n                  target: touch0_end.target,\r\n                  timeStamp: event.timeStamp,\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        })) {\r\n          event.preventDefault();\r\n        }\r\n      }\r\n      this.#touches = this.#touches.filter((touch) => getTouchByIdentifer(touch.identifier, event.touches) > -1);\r\n      if (this.#touches.length == 0) {\r\n        this.#touchesLength = 0;\r\n      }\r\n      // } else if (event instanceof PointerEvent) {\r\n      //   console.log(\"up\", event);\r\n    } else if (event instanceof MouseEvent) {\r\n      if (this.#mouse && event.timeStamp - this.#mouse.timeStamp <= this.#maxDurationForSwipes) {\r\n        let movementX = event.screenX - this.#mouse.screenX;\r\n        let movementY = event.screenY - this.#mouse.screenY;\r\n        let abs_movement = movementX * movementX + movementY * movementY;\r\n        if (\r\n          abs_movement >= this.#minMovementForSwipes * this.#minMovementForSwipes &&\r\n          abs_movement <= this.#maxMovementForSwipes * this.#maxMovementForSwipes\r\n        ) {\r\n          if (!this.trigger(this.#mouse.target, \"mpc-swipe\", {\r\n            bubbles: true,\r\n            cancelable: true,\r\n            view: event.view,\r\n            movementX: movementX,\r\n            movementY: movementY,\r\n            clientX: this.#mouse.clientX,\r\n            clientY: this.#mouse.clientY,\r\n            pageX: this.#mouse.pageX,\r\n            pageY: this.#mouse.pageY,\r\n            screenX: this.#mouse.screenX,\r\n            screenY: this.#mouse.screenY,\r\n            info: {\r\n              type: \"mouse\",\r\n              movement: {\r\n                ctrl: this.#mouse.ctrl,\r\n                buttons: this.#mouse.buttons,\r\n                from: {\r\n                  clientX: this.#mouse.clientX,\r\n                  clientY: this.#mouse.clientY,\r\n                  pageX: this.#mouse.pageX,\r\n                  pageY: this.#mouse.pageY,\r\n                  screenX: this.#mouse.screenX,\r\n                  screenY: this.#mouse.screenY,\r\n                  target: this.#mouse.target,\r\n                  timeStamp: this.#mouse.timeStamp,\r\n                },\r\n                to: {\r\n                  clientX: event.clientX,\r\n                  clientY: event.clientY,\r\n                  pageX: event.pageX,\r\n                  pageY: event.pageY,\r\n                  screenX: event.screenX,\r\n                  screenY: event.screenY,\r\n                  target: event.target,\r\n                  timeStamp: event.timeStamp,\r\n                },\r\n              },\r\n            },\r\n          })) {\r\n            event.preventDefault();\r\n          }\r\n        }\r\n        if (!this.trigger(event.target, \"mpc-up\", {\r\n          bubbles: true,\r\n          cancelable: true,\r\n          view: event.view,\r\n          movementX: movementX,\r\n          movementY: movementY,\r\n          clientX: event.clientX,\r\n          clientY: event.clientY,\r\n          pageX: event.pageX,\r\n          pageY: event.pageY,\r\n          screenX: event.screenX,\r\n          screenY: event.screenY,\r\n          info: {\r\n            type: \"mouse\",\r\n            movement: {\r\n              ctrl: this.#mouse.ctrl,\r\n              buttons: this.#mouse.buttons,\r\n              from: {\r\n                clientX: this.#mouse.clientX,\r\n                clientY: this.#mouse.clientY,\r\n                pageX: this.#mouse.pageX,\r\n                pageY: this.#mouse.pageY,\r\n                screenX: this.#mouse.screenX,\r\n                screenY: this.#mouse.screenY,\r\n                target: this.#mouse.target,\r\n                timeStamp: this.#mouse.timeStamp,\r\n              },\r\n              to: {\r\n                clientX: event.clientX,\r\n                clientY: event.clientY,\r\n                pageX: event.pageX,\r\n                pageY: event.pageY,\r\n                screenX: event.screenX,\r\n                screenY: event.screenY,\r\n                target: event.target,\r\n                timeStamp: event.timeStamp,\r\n              },\r\n            },\r\n          },\r\n        })) {\r\n          event.preventDefault();\r\n        }\r\n      }\r\n      this.#mouse = null;\r\n    }\r\n  }\r\n  #wheel = (event: Event) => {\r\n    if (event instanceof WheelEvent) {\r\n      this.trigger(event.target, event.ctrlKey ? \"mpc-zoom\" : \"mpc-move\", {\r\n        bubbles: true,\r\n        cancelable: false,\r\n        view: event.view,\r\n        movementX: event.deltaX,\r\n        movementY: event.deltaY,\r\n        clientX: event.clientX,\r\n        clientY: event.clientY,\r\n        pageX: event.pageX,\r\n        pageY: event.pageY,\r\n        screenX: event.screenX,\r\n        screenY: event.screenY,\r\n        info: {\r\n          type: \"wheel\",\r\n          ctrl: event.ctrlKey,\r\n          deltaX: event.deltaX,\r\n          deltaY: event.deltaY,\r\n          deltaZ: event.deltaZ,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  #mode: INPUT_MODE = 0;\r\n  get mode() { return this.#mode; }\r\n\r\n  activate(mode: INPUT_MODE = 7) {\r\n    this.#mode |= mode;\r\n    if ((mode & this.INPUT_MOUSE) == this.INPUT_MOUSE) {\r\n      globalThis.addEventListener(\"mousedown\", this.#down, true);\r\n      globalThis.addEventListener(\"mousemove\", this.#move, true);\r\n      globalThis.addEventListener(\"mouseup\", this.#up, true);\r\n    }\r\n    if ((mode & this.INPUT_TOUCH) == this.INPUT_TOUCH) {\r\n      globalThis.addEventListener(\"touchstart\", this.#down, true);\r\n      globalThis.addEventListener(\"touchmove\", this.#move, true);\r\n      globalThis.addEventListener(\"touchcancel\", this.#up, true);\r\n      globalThis.addEventListener(\"touchend\", this.#up, true);\r\n    }\r\n    if ((mode & this.INPUT_WHEEL) == this.INPUT_WHEEL) {\r\n      globalThis.addEventListener(\"wheel\", this.#wheel, true);\r\n      globalThis.addEventListener(\"mousewheel\", this.#wheel, true);\r\n    }\r\n    // if ((mode & this.INPUT_POINTER) == this.INPUT_POINTER) {\r\n    //   globalThis.addEventListener(\"pointerdown\", this.#down, true);\r\n    //   globalThis.addEventListener(\"pointermove\", this.#move, true);\r\n    //   globalThis.addEventListener(\"pointercancel\", this.#up, true);\r\n    //   globalThis.addEventListener(\"pointerup\", this.#up, true);\r\n    // }\r\n    return this.#mode;\r\n  }\r\n  /**\r\n   * Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\r\n   */\r\n  trigger(target: EventTarget, type: \"mpc-down\" | \"mpc-move\" | \"mpc-swipe\" | \"mpc-zoom\" | \"mpc-up\", eventInitDict: GesturesEventInit): boolean;\r\n  trigger(target: EventTarget, type: string, eventInitDict: GesturesEventInit): boolean;\r\n  trigger(target: EventTarget, type: string, eventInitDict: GesturesEventInit): boolean {\r\n    var event = new GesturesEvent(type, eventInitDict);\r\n    return target.dispatchEvent(event);\r\n  }\r\n  deactivate(mode: INPUT_MODE = 7) {\r\n    this.#mode -= (this.#mode & mode);\r\n    if ((mode & this.INPUT_MOUSE) == this.INPUT_MOUSE) {\r\n      globalThis.removeEventListener(\"mousedown\", this.#down, true);\r\n      globalThis.removeEventListener(\"mousemove\", this.#move, true);\r\n      globalThis.removeEventListener(\"mouseup\", this.#up, true);\r\n    }\r\n    if ((mode & this.INPUT_TOUCH) == this.INPUT_TOUCH) {\r\n      globalThis.removeEventListener(\"touchstart\", this.#down, true);\r\n      globalThis.removeEventListener(\"touchmove\", this.#move, true);\r\n      globalThis.removeEventListener(\"touchcancel\", this.#up, true);\r\n      globalThis.removeEventListener(\"touchend\", this.#up, true);\r\n    }\r\n    if ((mode & this.INPUT_WHEEL) == this.INPUT_WHEEL) {\r\n      globalThis.removeEventListener(\"wheel\", this.#wheel, true);\r\n      globalThis.removeEventListener(\"mousewheel\", this.#wheel, true);\r\n    }\r\n    // if ((mode & this.INPUT_POINTER) == this.INPUT_POINTER) {\r\n    //   globalThis.removeEventListener(\"pointerdown\", this.#down, true);\r\n    //   globalThis.removeEventListener(\"pointermove\", this.#move, true);\r\n    //   globalThis.removeEventListener(\"pointercancel\", this.#up, true);\r\n    //   globalThis.removeEventListener(\"pointerup\", this.#up, true);\r\n    // }\r\n    return this.#mode;\r\n  }\r\n}\r\nObject.defineProperty(Gestures.prototype, Symbol.toStringTag, {\r\n  value: \"Gestures\"\r\n});\r\nexport default Gestures;\r\n\r\nconst MouseEvent = globalThis.MouseEvent || <typeof globalThis.MouseEvent>(<unknown>class { });\r\nconst TouchEvent = globalThis.TouchEvent || <typeof globalThis.TouchEvent>(<unknown>class { });\r\n// const PointerEvent = globalThis.PointerEvent || <typeof globalThis.PointerEvent><unknown>class { };\r\n\r\nfunction getTouchByIdentifer(identifier: number, touches: ArrayLike<Touch>) {\r\n  var i = 0;\r\n  var l = touches.length;\r\n  for (i; i < l; i++) {\r\n    if (touches[i].identifier == identifier) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n","export * from \"./Gestures\";\r\nexport * from \"./GesturesEvent\";\r\nimport GesturesEvent from \"./GesturesEvent\";\r\n\r\ndeclare global {\r\n  interface GlobalEventHandlersEventMap {\r\n    \"mpc-down\": GesturesEvent;\r\n    \"mpc-move\": GesturesEvent;\r\n    \"mpc-swipe\": GesturesEvent;\r\n    \"mpc-zoom\": GesturesEvent;\r\n    \"mpc-up\": GesturesEvent;\r\n  }\r\n}","export namespace MPC {}\r\nexport interface MPC {}\r\nexport const MPC: MPC = {\r\n  [Symbol.toStringTag]: \"MPC\"\r\n};\r\nexport default MPC;\r\n\r\ndeclare global {\r\n  const MPC: MPC;\r\n}\r\n","import { Gestures, GesturesEvent } from \"./ts/index\";\r\nimport MPC from \"@mpc/mpc\";\r\n\r\nexport * from \"./ts/index\";\r\n\r\ntype GesturesConstructor = typeof Gestures;\r\ntype GesturesEventConstructor = typeof GesturesEvent;\r\n\r\ndeclare module \"@mpc/mpc\" {\r\n  interface MPC {\r\n    Gestures: GesturesConstructor;\r\n    GesturesEvent: GesturesEventConstructor;\r\n  }\r\n}\r\n\r\nMPC.Gestures = Gestures;\r\nMPC.GesturesEvent = GesturesEvent;\r\n"]}